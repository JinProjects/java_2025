<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

<!-- step2
1. SqlSessionFactoryBean (sqlSession 생성 및 관리)
	private DataSource dataSource;		DB연동참고
	private Resource configLocation;	dto등 설정파일
	private Resource[] mapperLocations; mapper(sql)설정

2. SqlSession( insert, delete, update )

  private Configuration configuration;
 -->
 
 <context:component-scan base-package="com.company" />
 <!-- 클래스에 bean이 붙으면 spring이 관리해준다는 의미 -->
<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="dataSource" ref="datasource" />
	<property name="configLocation" value="classpath:config/mybatis-config.xml"></property>
	<property name="mapperLocations" >
		<list>
			<value>classpath:config/test-mapper.xml</value>
			<value>classpath:config/user-mapper.xml</value>
		</list>
	</property>
</bean>
<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
	<constructor-arg ref="sqlSessionFactory" />
</bean>

<!-- step1.  -->
<!-- Driver driver, String url, String username, String password -->
<context:property-placeholder location="classpath:config/db.properties" />
<bean id="datasource" 
		class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<!-- setter 사용 -->
	<property name="driverClass" value="${db.driverClass}" />
	<property name="url" value="${db.url}" />
	<property name="username" value="${db.username}" />
	<property name="password" value="${db.password}" />
</bean>

</beans>
